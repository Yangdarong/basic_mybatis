<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间,作用就是对sql进行分类话管理,理解sql隔离  -->
<mapper namespace="test">  
	
	<!-- 通过select执行数据库的查询 
		statement的标识ID		对象被封装到 mappedStatement 中
		
		parameterType 输入的参数类型
		resultType	      输出的对象类型
		需求： 通过 id 查询用户表的记录
	-->
	<select id="findUserById" parameterType="int" resultType="com.yang.mybatis.po.User">    
		select * from user_info where user_id = #{value}  
	</select> 
	
	<!-- 根据用户名称模糊查询用户信息  
		结果可能返回多条信息
	-->
	<select id="findUserByName" parameterType="java.lang.String" resultType="com.yang.mybatis.po.User">
		select * from user_info where user_name like '%${value}%'
	</select>
	
	<!-- 添加用户 -->
	<insert id="insertUser" parameterType="com.yang.mybatis.po.User">
		<!-- 
			将插入数据的逐渐返回,返回到user对象中
			keyProperty 是设置到对象的哪个属性
			SELECT LAST_INSERT_ID(): 得到刚insert进去记录的主键值, 只适用于自增主键
			resultType LAST_INSERT_ID() 结果类型
		 -->
		 <selectKey keyProperty="user_id" order="AFTER" resultType="java.lang.Integer">
		 	SELECT LAST_INSERT_ID()
		 </selectKey>
		
		insert into user_info(user_name, user_passwd, user_privilege) value(#{user_name},#{user_passwd}, #{user_privilege})
	</insert>
	
	<!-- 删除用户 -->
</mapper>